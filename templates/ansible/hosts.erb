# Create an OSEv3 group that contains the masters and nodes groups
[OSEv3:children]
masters
nodes
<%= "etcd\n" unless scope['::openshift3::etcd'].empty? -%>
<%= "lb\n" unless scope['::openshift3::lb'].empty? -%>

# Set variables common for all OSEv3 hosts
[OSEv3:vars]
# SSH user, this user should allow ssh based auth without requiring a password
ansible_ssh_user=<%= scope['::openshift3::ansible_ssh_user'] %>

# If ansible_ssh_user is not root, ansible_sudo must be set to true
ansible_sudo=<%= scope['::openshift3::ansible_sudo'] %>

# To deploy origin, change deployment_type to origin
deployment_type=<%= scope['::openshift3::real_deployment_type'] %>

openshift_pkg_version=-<%= scope['::openshift3::version'] %>

# enable htpasswd authentication
openshift_master_identity_providers=<%= scope['::openshift3::identity_providers'].to_json %>

osm_default_subdomain=<%= scope['::openshift3::app_domain'] %>
osm_cluster_network_cidr='<%= scope['::openshift3::cluster_network_cidr'] %>'
<%= "openshift_master_cluster_method=#{scope['::openshift3::master_cluster_method']}" if scope['::openshift3::master_cluster_method']!=:undef  %>
<%= "openshift_master_cluster_hostname=#{scope['::openshift3::master_cluster_hostname']}" if scope['::openshift3::master_cluster_hostname']!=:undef  %>
<%= "openshift_master_cluster_public_hostname=#{scope['::openshift3::master_cluster_public_hostname']}" if scope['::openshift3::master_cluster_public_hostname']!=:undef  %>
<%= "openshift_master_public_api_url=#{scope['::openshift3::master_public_api_url']}" if scope['::openshift3::master_public_api_url']!=:undef  %>
<%= "openshift_master_public_console_url=#{scope['::openshift3::master_public_console_url']}" if scope['::openshift3::master_public_console_url']!=:undef  %>
<%= "openshift_master_metrics_public_url=https://#{scope['::openshift3::metrics_domain']}/hawkular/metrics" if scope['::openshift3::metrics_domain']!=:undef  %>
<%= "openshift_master_logging_public_url=https://#{scope['::openshift3::logging_domain']}" if scope['::openshift3::logging_domain']!=:undef  %>
<%= "openshift_master_extension_scripts=#{scope['::openshift3::real_master_extension_scripts'].to_json}" if scope['::openshift3::master_extension_scripts'] != :undef %>
<%= "openshift_master_extension_stylesheets=#{scope['::openshift3::real_master_extension_stylesheets'].to_json}" if scope['::openshift3::master_extension_stylesheets'] != :undef %>
<%= "openshift_master_extensions=#{scope['::openshift3::master_extensions'].to_json}" if scope['::openshift3::master_extensions'] != :undef %>
<%= "openshift_master_oauth_template=#{scope['::openshift3::real_master_oauth_template']}" if scope['::openshift3::master_oauth_template'] != :undef %>

<%= scope.function_hiera_vars_to_inventory([scope['::openshift3::real_ansible_vars']]) %>

openshift_set_node_ip=<%= scope['::openshift3::set_node_ip'] %>
openshift_set_hostname=<%= scope['::openshift3::set_hostname'] %>
<%= "os_sdn_network_plugin_name=#{scope['::openshift3::sdn_network_plugin_name']}" if scope['::openshift3::sdn_network_plugin_name']!=:undef %>

# Docker Configuration
openshift_docker_options='<%= scope['::openshift3::docker_options'] %>'

# Project Configuration
<%= "osm_project_request_template=#{scope['::openshift3::project_request_template']}" if scope['::openshift3::project_request_template']!=:undef  %>

openshift_hosted_manage_router=false
openshift_hosted_manage_registry=false

# Enable cockpit
osm_use_cockpit=true

# Set cockpit plugins
osm_cockpit_plugins=['cockpit-kubernetes']

# Configure controller arguments
osm_controller_args={'resource-quota-sync-period': ['<%= scope['::openshift3::quota_sync_period'] %>']}

# host group for masters
[masters]
<%= scope.function_hiera_to_inventory([scope['::openshift3::masters']]) %>

# host group for nodes, includes region info
[nodes]
<%= scope.function_hiera_to_inventory([scope['::openshift3::masters']]) -%>
<%= scope.function_hiera_to_inventory([scope['::openshift3::nodes']]) -%>

[etcd]
<%= scope.function_hiera_to_inventory([scope['::openshift3::etcd']]) %>

[lb]
<%= scope.function_hiera_to_inventory([scope['::openshift3::lb']]) %>
