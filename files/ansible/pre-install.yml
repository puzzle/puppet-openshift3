- name: Compute additional host groups
  hosts: localhost
  connection: local
  become: no
  gather_facts: no

  tasks:
    - name: Determine first master
      add_host:
        name: "{{ groups.masters.0 }}"
        groups: first_master

- name: Prepare hosts for OpenShift installation
  hosts: all
  vars:
    use_dnsmasq: "{{openshift_use_dnsmasq is undefined or (openshift_use_dnsmasq | bool)}}"

  roles:
    - { role: vagrant, when: "vagrant is defined and vagrant != ''" }

  tasks:
    - name: bootstrap epel-release install
      copy: src=ansible-bootstrap-epel.repo
        dest=/etc/yum.repos.d/
        owner=root group=root mode=0644
      when: configure_epel

    - name: epel-release install
      yum: name=epel-release
       enablerepo=ansible-bootstrap-epel
       state=present
      when: configure_epel

    - name: epel repository disable
      ini_file: dest=/etc/yum.repos.d/epel.repo
            section=epel
            option=enable
            value=0
      when: configure_epel

    - name: Install Ansible module dependencies
      yum: name={{item}} state=present enablerepo={{epel_repo_id}}
      with_items:
        - jq
        - yum-plugin-versionlock

    - name: Enable RHEL repos
      rhsm_repo: name={{item}} enable=1
      with_items: "{{ openshift_rhsm_repos }}"
      when: ansible_distribution == "RedHat"

    - name: Set RHEL repos priority
      rhsm_repo_prio: name={{item}} priority=1
      with_items: "{{ openshift_rhsm_repos }}"
      when: ansible_distribution == "RedHat"

    - name: Enable OpenShift Enterprise repos
      rhsm_repo: name={{item}} enable=1
      with_items:
        - rhel-7-server-ose-{{openshift_major}}.{{openshift_minor}}-rpms
      when: deployment_type == "enterprise" or deployment_type == "openshift-enterprise"

    - name: Enable OpenShift Origin repos
      copy: src=maxamillion-origin-next-epel-7
        dest=/etc/yum.repos.d/
        owner=root group=root mode=0644
      when: ansible_distribution != "RedHat"

    - name: Install OpenShift prerequisites
      yum: name={{item}} state=present
      with_items:
        - deltarpm
        - wget
        - vim-enhanced
        - net-tools
        - bind-utils
        - git
        - bridge-utils
        - iptables-services
        - pyOpenSSL
        - bash-completion
        - docker-python

    - name: Versionlock OpenShift Packages
      yum_versionlock: name={{item}} version={{openshift_version}}
      with_items:
        - "{{openshift_package_name}}"
        - "{{openshift_package_name}}-master"
        - "{{openshift_package_name}}-node"
        - "{{openshift_package_name}}-sdn-ovs"
        - "{{openshift_package_name}}-clients-redistributable"

    - name: Versionlock Docker Packages
      yum_versionlock: name={{item}} version={{docker_version}}
      with_items:
        - "docker"

    - name: Versionlock Ansible Package
      yum_versionlock: name={{item}} version={{ansible_pkg_version}}
      with_items:
        - "ansible"

    - name: Disable NetworkManager service
      service: name=NetworkManager state=stopped enabled=false
      when: not use_dnsmasq

    - name: Enable NetworkManager service
      service: name=NetworkManager state=started enabled=true
      when: use_dnsmasq

    - name: Enable network service
      service: name=network state=started enabled=true
      when: not use_dnsmasq

    - name: Disable old centralized logging service
      service: name=td-agent state=stopped enabled=false
      ignore_errors: yes

    - name: Workaround for rhbz#133563
      lineinfile: dest=/etc/group line="dockerlog:x:4294967295:"

    - name: Workaround for rhbz#133563
      lineinfile: dest=/etc/passwd line="dockerlog:x:4294967295:4294967295::/home/dockerlog:/bin/nologin"

- name: Prepare masters for OpenShift installation
  hosts: masters

  tasks:
    - name: Install redistributable OpenShift Clients
      yum: name={{openshift_package_name}}-clients-redistributable state=latest

    - name: Checkout web console style repo
      git: accept_hostkey=true dest=/var/lib/puppet-openshift3/style repo={{master_style_repo_url}} version={{master_style_repo_ref|default(omit)}} key_file={{master_style_repo_ssh_key|default(omit)}}
      when: master_style_repo_url|default("") != ""

    - name: Configure master image format
      local_action:
        module: lineinfile
        dest: /root/openshift-ansible/roles/openshift_master/templates/master.yaml.v1.j2
        regexp: '^  format:'
        line: "  format: {{ master_image_format }}"
      when: master_image_format|default("") != ""

- name: Prepare primary master for OpenShift installation
  hosts: first_master

  tasks:
    - name: Create signer cert
      command: oadm ca create-signer-cert --cert=service-signer.crt --key=service-signer.key --serial=service-signer-serial.txt
      args:
        chdir: /etc/origin/master
        creates: /etc/origin/master/service-signer.crt
